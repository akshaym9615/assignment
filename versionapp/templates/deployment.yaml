apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: versionapp
  labels:
    app.kubernetes.io/name: {{ include "versionapp.name" . }}
    helm.sh/chart: {{ include "versionapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "versionapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "versionapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.IMAGE_REGISTRY }}version-app:{{ .Values.IMAGE_VERSION }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /version
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 100
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /version
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 140
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            limits:
              memory: 2048Mi
            requests:
              memory: "1024Mi"
          volumeMounts:
          - mountPath: /var/log/applogs/Logs
            name: log-mount
          env:
          - name: LOG_LOCATION
            value: /tmp/logs/versionapp/applogs/
      volumes:
      - hostPath:
          path: {{ .Values.LOGPATH }}
          type: ""
        name: log-mount
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
